// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPost1DetectapplianceParams creates a new Post1DetectapplianceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPost1DetectapplianceParams() *Post1DetectapplianceParams {
	return &Post1DetectapplianceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPost1DetectapplianceParamsWithTimeout creates a new Post1DetectapplianceParams object
// with the ability to set a timeout on a request.
func NewPost1DetectapplianceParamsWithTimeout(timeout time.Duration) *Post1DetectapplianceParams {
	return &Post1DetectapplianceParams{
		timeout: timeout,
	}
}

// NewPost1DetectapplianceParamsWithContext creates a new Post1DetectapplianceParams object
// with the ability to set a context for a request.
func NewPost1DetectapplianceParamsWithContext(ctx context.Context) *Post1DetectapplianceParams {
	return &Post1DetectapplianceParams{
		Context: ctx,
	}
}

// NewPost1DetectapplianceParamsWithHTTPClient creates a new Post1DetectapplianceParams object
// with the ability to set a custom HTTPClient for a request.
func NewPost1DetectapplianceParamsWithHTTPClient(client *http.Client) *Post1DetectapplianceParams {
	return &Post1DetectapplianceParams{
		HTTPClient: client,
	}
}

/* Post1DetectapplianceParams contains all the parameters to send to the API endpoint
   for the post1 detectappliance operation.

   Typically these are written to a http.Request.
*/
type Post1DetectapplianceParams struct {

	/* Message.

	   JSON serialized object describing infrared signals. Includes "data", "freq" and "format" keys.
	*/
	Message string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post1 detectappliance params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *Post1DetectapplianceParams) WithDefaults() *Post1DetectapplianceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post1 detectappliance params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *Post1DetectapplianceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post1 detectappliance params
func (o *Post1DetectapplianceParams) WithTimeout(timeout time.Duration) *Post1DetectapplianceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post1 detectappliance params
func (o *Post1DetectapplianceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post1 detectappliance params
func (o *Post1DetectapplianceParams) WithContext(ctx context.Context) *Post1DetectapplianceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post1 detectappliance params
func (o *Post1DetectapplianceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post1 detectappliance params
func (o *Post1DetectapplianceParams) WithHTTPClient(client *http.Client) *Post1DetectapplianceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post1 detectappliance params
func (o *Post1DetectapplianceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMessage adds the message to the post1 detectappliance params
func (o *Post1DetectapplianceParams) WithMessage(message string) *Post1DetectapplianceParams {
	o.SetMessage(message)
	return o
}

// SetMessage adds the message to the post1 detectappliance params
func (o *Post1DetectapplianceParams) SetMessage(message string) {
	o.Message = message
}

// WriteToRequest writes these params to a swagger request
func (o *Post1DetectapplianceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param message
	frMessage := o.Message
	fMessage := frMessage
	if fMessage != "" {
		if err := r.SetFormParam("message", fMessage); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
